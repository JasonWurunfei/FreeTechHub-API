"""
Django settings for FreeTechHub_api project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'n_u5=6xg8v96vpy9#i2f51e-xhm-&)f$&hg8ggb)b&)o35*s_g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'blog.apps.BlogConfig',
    'user.apps.UserConfig',
    'tag.apps.TagConfig',
    'question.apps.QuestionConfig',
    'transaction.apps.TransactionConfig',
    'like.apps.LikeConfig',
    'comment.apps.CommentConfig',
    'search.apps.SearchConfig',
    'skilltree.apps.SkilltreeConfig',

    # third party packages
    'rest_framework',
    'corsheaders',
    'imagekit',
    'social_django',
    'rest_social_auth',
]

AUTHENTICATION_BACKENDS = (
    'social_core.backends.github.GithubOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_GITHUB_KEY = '5ee059616c2412fba0e3'
SOCIAL_AUTH_GITHUB_SECRET = '52d240bb20846c0d42b4d40ceeed9207f5e90d3b'
SOCIAL_AUTH_GITHUB_SCOPE = ["email",]
SOCIAL_AUTH_GITHUB_OAUTH2_SCOPE = [
    "https://api.github.com/user/emails"
]
SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/blog/'

REST_FRAMEWORK = {

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
}

JWT_AUTH = {
    'JWT_ENCODE_HANDLER':
    'rest_framework_jwt.utils.jwt_encode_handler',

    'JWT_DECODE_HANDLER':
    'rest_framework_jwt.utils.jwt_decode_handler',

    'JWT_PAYLOAD_HANDLER':
    'rest_framework_jwt.utils.jwt_payload_handler',

    'JWT_PAYLOAD_GET_USER_ID_HANDLER':
    'rest_framework_jwt.utils.jwt_get_user_id_from_payload_handler',

    'JWT_RESPONSE_PAYLOAD_HANDLER':
    'rest_framework_jwt.utils.jwt_response_payload_handler',

    'JWT_SECRET_KEY': SECRET_KEY,
    'JWT_GET_USER_SECRET_KEY': None,
    'JWT_PUBLIC_KEY': None,
    'JWT_PRIVATE_KEY': None,
    'JWT_ALGORITHM': 'HS256',
    'JWT_VERIFY': True,
    'JWT_VERIFY_EXPIRATION': True,
    'JWT_LEEWAY': 0,
    'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=6000),
    'JWT_AUDIENCE': None,
    'JWT_ISSUER': None,

    'JWT_ALLOW_REFRESH': False,
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=7),

    'JWT_AUTH_HEADER_PREFIX': 'JWT',
    'JWT_AUTH_COOKIE': None,

}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# corsheaders
CORS_ORIGIN_ALLOW_ALL = True # allow all

ROOT_URLCONF = 'FreeTechHub_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'FreeTechHub_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

# 置为False
USE_TZ = False

#stmp account
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = os.environ.get('DJANGO_EMAIL_USER')
EMAIL_HOST_PASSWORD = os.environ.get('DJANGO_EMAIL_PASSWORD')
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = os.environ.get('DJANGO_EMAIL_USER')

AUTH_USER_MODEL = 'user.User'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

PRODUCTION = False
IP = '115.29.242.221' if PRODUCTION else '127.0.0.1'
FRONT_DOMAIN = f'{IP}:80' if PRODUCTION else f'{IP}:8080'
# FRONT_DOMAIN = f'{IP}:80' if PRODUCTION else f'{IP}:80'

BACK_DOMAIN = f'{IP}:8002' if PRODUCTION else f'{IP}:8000'
# STATIC_DIR = '/usr/local/nginx/html' if PRODUCTION else r"D:\nginx\nginx-1.18.0\html" 
STATIC_DIR = '/usr/local/nginx/html' if PRODUCTION else BASE_DIR

STATIC_DOMAIN = FRONT_DOMAIN if PRODUCTION else BACK_DOMAIN
STATIC_URL = f'http://{STATIC_DOMAIN}/static/' if PRODUCTION else '/static/'
STATIC_ROOT = os.path.join(STATIC_DIR, 'static')

# 媒体文件地址
MEDIA_URL = f'http://{STATIC_DOMAIN}/media/' if PRODUCTION else '/media/'
MEDIA_ROOT = os.path.join(STATIC_DIR, 'media')

AVATAR_DIR = os.path.join(MEDIA_ROOT, 'avatar')
AVATAR_URL =  os.path.join(MEDIA_URL, 'avatar')

QUESTION_DIR = os.path.join(MEDIA_ROOT, 'question')
QUESTION_URL = os.path.join(MEDIA_URL,  'question')

BLOG_DIR = os.path.join(MEDIA_ROOT, 'blog')
BLOG_URL = os.path.join(MEDIA_URL,  'blog')